set nornu
set nospell
set whichwrap=
set nonumber
set tags=tags;/
set timeout ttimeoutlen=50
set mouse=
set ai
set noerrorbells visualbell t_vb=
if has('autocmd')
    autocmd GUIEnter * set visualbell t_vb=
endif

map <F5> <Esc>:bp<CR>
map <F6> <Esc>:bn<CR>
map <F7> <Esc>:tabp<CR>
map <F8> <Esc>:tabn<CR>
map <F9> <Esc>:set nonumber!<CR>
map <F12> <Esc>:NERDTreeToggle<CR>

map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

map <C-G> :silent execute "!gits % &>/dev/null &" \| redraw!<CR>

" Macro for navigating through a merge conflict
let @a='/\(<<<<<<<\|=======\|>>>>>>>\)'
" Macro to surround a line with curly braces
let @s='VS{kJj^'
let @t=":Tab/\\(\\(;\\)\\@<= *\\|=\\)"
" make the contents of curly braces a manual fold
let @f="?{jVn%kzf"


" Show syntax highlighting groups for word under cursor
" nmap <C-I> :call <SID>SynStack()<CR>
function! <SID>SynStack()
    if !exists("*synstack")
        return
    endif
    echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc

" Smartly align things like arrays
inoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a
function! s:align()
    let p = '^\s*|\s.*\s|\s*$'
    if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
        let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
        let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
        Tabularize/|/l1
        normal! 0
        call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
    endif
endfunction

" Sync out changes in TimeIPS-server whenever you save
function! s:runGits()
    silent execute "!gits > /dev/null 2>&1 &"
    execute "redraw!"
    endfunction

autocmd BufWritePost * call s:runGits()

" For local replace
nnoremap gR gd[{V%:s/<C-R>///gc<left><left><left>

" For global replace
nnoremap gr gD:%s/<C-R>///gc<left><left><left>"}]"

" Folding options
set foldmarker={,}
set foldlevel=0
set foldmethod=marker

filetype plugin indent on

" Bundle 'vim-xdebug'
