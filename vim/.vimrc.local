" Disable line numbers
set nonumber
set norelativenumber

set whichwrap=
set tags=tags;/
set timeout ttimeoutlen=50
set mouse=
set ai
set noerrorbells visualbell t_vb=

if has('autocmd')
    autocmd GUIEnter * set visualbell t_vb=
endif

map <F5> <Esc>:bp<CR>
map <F6> <Esc>:bn<CR>
map <F7> <Esc>:tabp<CR>
map <F8> <Esc>:tabn<CR>

" Toggle line numbers when I want them
map <F9> <Esc>:set nonumber!<CR>

" Open/Close NERDTree
map <F12> <Esc>:NERDTreeToggle<CR>

" Use Ctrl + [hjkl] to navigate windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Macro for navigating through a merge conflict
let @a='/\(<<<<<<<\|=======\|>>>>>>>\)\r'

" Macro to surround a line with curly braces
let @s='VS{kJj^'

let @t=":Tab/\\(\\(;\\)\\@<= *\\|=\\)"

" make the contents of curly braces a manual fold
let @f="?{jVn%kzf"

" Smartly align things like arrays
inoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a
function! s:align()
    let p = '^\s*|\s.*\s|\s*$'
    if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
        let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
        let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
        Tabularize/|/l1
        normal! 0
        call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
    endif
endfunction

" Folding options
set foldmarker={,}
set foldlevel=0
set foldmethod=marker

" Hook to make local-er changes
if filereadable(expand("~/.vimrc.machinespecific"))
    source ~/.vimrc.machinespecific
endif
